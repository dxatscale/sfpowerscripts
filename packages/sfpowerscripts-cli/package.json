{
    "name": "@dxatscale/sfpowerscripts",
    "description": "DX@Scale Toolkit",
    "version": "20.30.4",
    "license": "MIT",
    "author": "dxatscale",
    "release": "March 23",
    "bin": {
        "readVars": "./scripts/readVars.sh"
    },
    "bugs": "https://github.com/dxatscale/sfpowerscripts/issues",
    "dependencies": {
        "@dxatscale/sfdc-soup": "^18.2.6",
        "@dxatscale/sfdx-process-wrapper": "0.1.0",
        "@dxatscale/sfp-logger": "1.2.0",
        "@dxatscale/sfpowerscripts.core": "33.23.2",
        "@oclif/core": "1.10.0",
        "@oclif/plugin-help": "5.1.12",
        "@salesforce/command": "5.2.43",
        "@salesforce/core": "3.34.1",
        "adm-zip": "^0.5.4",
        "ajv": "8.11.0",
        "async-retry": "^1.3.1",
        "bottleneck": "^2.19.5",
        "cli-table": "0.3.11",
        "dotenv": "^8.2.0",
        "fs-extra": "^9.1.0",
        "glob": "^7.1.6",
        "handlebars": "^4.7.7",
        "js-yaml": "^4.0.0",
        "jsforce": "2.0.0-beta.19",
        "lodash": "^4.17.21",
        "markdown-table": "^2.0.0",
        "marked": "4.0.16",
        "marked-terminal": "5.1.1",
        "neverthrow": "4.2.1",
        "object-hash": "^2.1.1",
        "puppeteer": "19.2.0",
        "rimraf": "^3.0.2",
        "semver": "7.3.7",
        "simple-git": "3.16.0"
    },
    "devDependencies": {
        "@babel/core": "7.18.2",
        "@babel/plugin-proposal-nullish-coalescing-operator": "^7.17.12",
        "@babel/plugin-proposal-optional-chaining": "7.17.12",
        "@oclif/plugin-command-snapshot": "^3",
        "@oclif/test": "^2",
        "@salesforce/dev-config": "3.0.1",
        "@salesforce/plugin-command-reference": "^1.3.16",
        "@salesforce/ts-sinon": "^1.3.21",
        "@types/adm-zip": "^0.4.33",
        "@types/jest": "27.4.1",
        "@types/js-yaml": "^4.0.5",
        "@types/marked": "4.0.2",
        "jest": "^27.5.1",
        "oclif": "^3.1.2",
        "snyk": "^1.826.0",
        "ts-jest": "27.1.4",
        "ts-node": "10.7.0",
        "typescript": "^4.1.3"
    },
    "engines": {
        "node": ">=14.0.0"
    },
    "files": [
        "/lib",
        "/messages",
        "/npm-shrinkwrap.json",
        "/scripts",
        "/resources",
        "/oclif.manifest.json"
    ],
    "homepage": "https://github.com/dxatscale/sfpowerscripts",
    "keywords": [
        "sfdx-plugin"
    ],
    "oclif": {
        "commands": "./lib/commands",
        "topics": {
            "sfpowerscripts": {
                "description": "The DX@Scale CI/CD Orchestrator",
                "external": true,
                "subtopics": {
                    "releasedefinition": {
                        "description": "Commands around release definition"
                    },
                    "orchestrator": {
                        "description": "Orchestrate packages from a monorepo through its lifecycle, driven by descriptors in your sfdx-project.json"
                    },
                    "pool": {
                        "description": "Manage the pooled orgs created by the sfpowerscripts orchestrator in prepare stage"
                    },
                    "changelog": {
                        "description": "Track your artifacts & user stories as they progress through different environments, with release changelogs"
                    },
                    "package": {
                        "description": "Work with various types of packages such as unlocked/source/data/delta individually",
                        "subtopics": {
                            "data": {
                                "description": "Commands to create and install data packages (sfdmu)"
                            },
                            "unlocked": {
                                "description": "Commands to create and install unlocked packages"
                            },
                            "source": {
                                "description": "Commands to create and install sfpowerscripts source packages"
                            }
                        }
                    },
                    "analyze": {
                        "description": "Analyze your projects using static analysis tools such as PMD",
                        "external": true
                    },
                    "apextests": {
                        "description": "Trigger Apex Tests and validate apex tests in a package"
                    },
                    "repo": {
                        "description": "Commands to help with maintaing repository"
                    },
                    "dependency": {
                        "description": "Commands to help with dependency management of a project",
                        "subtopics": {
                            "expand": {
                                "description": "Expand the dependency list in sfdx-project.json file for each package, fix the gap of dependencies from its dependent packages"
                            },
                            "shrink": {
                                "description": "Shrink the dependency list in sfdx-project.json file for each package, remove duplicate dependencies that already exist in its dependent packages"
                            },
                            "install": {
                                "description": "Install all the external dependencies of a given project"
                            }
                        }
                    }
                }
            }
        },
        "devPlugins": [
            "@oclif/plugin-help",
            "@oclif/plugin-command-snapshot",
            "@salesforce/plugin-command-reference"
        ]
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/dxatscale/sfpowerscripts.git",
        "directory": "packages/sfpowerscripts-cli"
    },
    "scripts": {
        "build": "npm run clean && npm run compile",
        "manifest": "oclif manifest",
        "clean": "rimraf ./lib && rimraf tsconfig.tsbuildinfo",
        "compile": "tsc -b tsconfig.json",
        "snyk-protect": "snyk protect",
        "test": "FORCE_COLOR=true jest --silent --verbose --coverage --detectOpenHandles"
    },
    "snyk": true
}
